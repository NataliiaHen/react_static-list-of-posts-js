{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","length","map","id","PostInfo","post","title","PostList","posts","postsFromServer","commentsFromServer","filter","postId","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"428IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCFGC,G,YAAc,SAAC,GAAD,QACzBC,QACEF,EAFuB,EAEvBA,KACAD,EAHuB,EAGvBA,MACAI,EAJuB,EAIvBA,KAJuB,OAOzB,qBAAIN,UAAU,cAAd,UACE,qBAAIA,UAAU,qBAAd,UACE,wBAAQA,UAAU,oBAAlB,SAAuCG,IAEtC,OAED,mBAAGH,UAAU,qBAAqBC,KAAI,iBAAYC,GAAlD,SACGA,OAIL,qBAAKF,UAAU,oBAAf,SACGM,SClBMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OACP,oBAAIT,UAAU,cAAd,SACGQ,EAASE,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQM,SAKnB,mBAAG,UAAQ,oBAAX,8BCVSC,EAAW,SAAC,GAAD,QACtBC,KACEC,EAFoB,EAEpBA,MACAR,EAHoB,EAGpBA,KACAE,EAJoB,EAIpBA,SACAT,EALoB,EAKpBA,KALoB,OAQtB,qBAAIC,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCc,IAEjC,8BACG,eAEAf,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGC,UAAU,iBAAb,SACGM,IAGH,cAAC,EAAD,CAAaE,SAAUA,QCzBdO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIhB,UAAU,WAAd,SACGgB,GAASA,EAAMN,KAAI,SAAAG,GAAI,OACtB,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKF,UCUX,IAAMK,EAAQC,EAAgBP,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3CL,UAZuBG,EAYGE,EAAKF,GAXxBO,EACJC,QAAO,SAAAd,GAAO,OAAIA,EAAQe,SAAWT,MAWxCZ,MARmBsB,EAQDR,EAAKQ,OAPhBC,EACJC,MAAK,SAAAxB,GAAI,OAAIA,EAAKY,KAAOU,QAF9B,IAAqBA,EALIV,KAgBZa,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2aae310e.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './CommentInfo.scss';\n\nexport const CommentInfo = ({\n  comment: {\n    name,\n    email,\n    body,\n  },\n}) => (\n  <li className=\"CommentInfo\">\n    <h2 className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n        {email}\n      </a>\n    </h2>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </li>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length ? (\n    <ul className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo\n          comment={comment}\n          key={comment.id}\n        />\n      ))}\n    </ul>\n  ) : (\n    <p data-cy=\"NoCommentsMessage\">No comments yet</p>\n  )\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({\n  post: {\n    title,\n    body,\n    comments,\n    user,\n  },\n}) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        {user && <UserInfo user={user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <CommentList comments={comments} />\n  </li>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts && posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getCommentsById(id) {\n  return commentsFromServer\n    .filter(comment => comment.postId === id);\n}\n\nfunction getUserById(userId) {\n  return usersFromServer\n    .find(user => user.id === userId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  comments: getCommentsById(post.id),\n  user: getUserById(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}